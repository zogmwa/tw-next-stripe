# This is a basic workflow to help you get started with Actions

name: Tagged Web FrontEnd CI (Run Build and Formatting check)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      max-parallel: 4
      matrix:
        node-version: [14.x]

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set Node.js packages yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=CACHE_DIR::$(yarn cache dir)"

      - run: npm install -g yarn

      - name: yarn-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir.outputs.CACHE_DIR }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Run Validation Checks
        run: |
          yarn build
          yarn validate-format

      - name: Test
        run: yarn test
